AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an RabbitMQ and RDS instances.

Resources:
  RabbitMQSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for RabbitMQ broker'
      VpcId: 'vpc-067d20803efece1e3'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5671
          ToPort: 5671
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 15671
          ToPort: 15671
          CidrIp: '0.0.0.0/0'

  RabbitMQBroker:
    Type: 'AWS::AmazonMQ::Broker'
    Properties:
      AutoMinorVersionUpgrade: true
      BrokerName: 'myRabbitMQBroker-1'
      DeploymentMode: 'SINGLE_INSTANCE'
      EngineType: 'RabbitMQ'
      EngineVersion: '3.8.23'
      HostInstanceType: 'mq.t3.micro'
      PubliclyAccessible: false
      Users:
        - Username: 'admin'
          Password: 'YourPasswordHere'
      SubnetIds:
        - 'subnet-0edcb814af0d6a907'
      SecurityGroups:
        - !GetAtt RabbitMQSecurityGroup.GroupId
      Logs:
        General: true
      Tags:
        - Key: 'Name'
          Value: 'myRabbitMQBroker'

  RDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for RDS instance'
      VpcId: 'vpc-067d20803efece1e3'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: '0.0.0.0/0'

  RDSInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: "discord-bot-rds-db"
      DBName: 'tempo'
      MasterUsername: adminwhatup
      MasterUserPassword: adminadminwhatup
      DBInstanceClass: 'db.t3.micro'
      AllocatedStorage: '20'
      Engine: 'postgres'
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref RDSSubnetGroup
      BackupRetentionPeriod: 7
      MultiAZ: false
      PubliclyAccessible: true
      StorageType: 'gp2'

  RDSSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: 'Subnet group for RDS instance'
      SubnetIds:
        - 'subnet-0edcb814af0d6a907'
        - 'subnet-03cd93093acf98fa6'

Outputs:
  RabbitMQBrokerEndpoint:
    Description: "The endpoint address of the RabbitMQ broker"
    Value: !Join
      - ','
      - !GetAtt RabbitMQBroker.AmqpEndpoints

  RabbitMQBrokerArn:
    Description: "The ARN of the RabbitMQ broker"
    Value: !Ref RabbitMQBroker

  RDSInstanceEndpoint:
    Description: "The endpoint address of the RDS instance"
    Value: !GetAtt RDSInstance.Endpoint.Address

  RDSInstanceArn:
    Description: "The ARN of the RDS instance"
    Value: !Ref RDSInstance