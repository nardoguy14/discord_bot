name: Deploy to AWS

run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€

on:
  push:
    branches:
      - main

jobs:
  Build-Docker-Containers:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker buildx build --load -t twitch_leagues_bot:latest .
          docker tag twitch_leagues_bot:latest nardoarevalo14/twitch_leagues_bot:latest
          echo "Docker twitch bot image built."

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          echo "Pushing Docker image..."
          docker push nardoarevalo14/twitch_leagues_bot:latest


  Build-Infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Create or Update Cloudformation
        run: |
          STACK_NAME="Discord League Bot Stack"
          TEMPLATE_FILE="deployment/infra_cloudformation.yml"
          CAPABILITIES="CAPABILITY_IAM"

#          STACK_EXISTS=$(aws cloudformation describe-stacks --stack-name $STACK_NAME 2>/dev/null)
          aws cloudformation describe-stacks --stack-name $STACK_NAME
#          if [ -z "$STACK_EXISTS" ]; then
#              echo "Stack does not exist. Creating stack..."
#              aws cloudformation create-stack --stack-name $STACK_NAME --template-body file://$TEMPLATE_FILE --capabilities $CAPABILITIES
#              aws cloudformation wait stack-create-complete --stack-name $STACK_NAME
#          else
#              echo "Stack exists. Updating stack..."
#              aws cloudformation update-stack --stack-name $STACK_NAME --template-body file://$TEMPLATE_FILE --capabilities $CAPABILITIES
#              aws cloudformation wait stack-update-complete --stack-name $STACK_NAME
#          fi